
import React, { useState } from 'react';
import { Settings, Download, Copy, RotateCcw } from 'lucide-react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Slider } from '@/components/ui/slider';
import { Switch } from '@/components/ui/switch';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { useToast } from '@/hooks/use-toast';

const ConfigBuilder = () => {
  const { toast } = useToast();
  
  // Performance settings
  const [fpsMax, setFpsMax] = useState([100]);
  const [showFps, setShowFps] = useState(false);
  const [netGraph, setNetGraph] = useState(false);
  const [developer, setDeveloper] = useState(false);
  
  // HUD settings
  const [hudFastswitch, setHudFastswitch] = useState(true);
  const [dynamicCrosshair, setDynamicCrosshair] = useState(false);
  const [violenceHgibs, setViolenceHgibs] = useState(true);
  const [corpseStay, setCorpseStay] = useState([600]);
  
  // Mouse settings
  const [sensitivity, setSensitivity] = useState([2.5]);
  const [mYaw, setMYaw] = useState([0.022]);
  const [mPitch, setMPitch] = useState([0.022]);
  const [zoomSensitivity, setZoomSensitivity] = useState([1.2]);
  
  // Player settings
  const [playerName, setPlayerName] = useState('Player');
  const [rightHand, setRightHand] = useState(true);
  
  // Network settings
  const [rate, setRate] = useState([25000]);
  const [updateRate, setUpdateRate] = useState([101]);
  const [cmdRate, setCmdRate] = useState([101]);

  const generateConfig = () => {
    const config = `// Generated by rtools16 - Config Builder
// Performance Settings
fps_max ${fpsMax[0]}
cl_showfps ${showFps ? '1' : '0'}
net_graph ${netGraph ? '1' : '0'}
developer ${developer ? '1' : '0'}

// HUD Settings
hud_fastswitch ${hudFastswitch ? '1' : '0'}
cl_dynamiccrosshair ${dynamicCrosshair ? '1' : '0'}
violence_hgibs ${violenceHgibs ? '1' : '0'}
cl_corpsestay ${corpseStay[0]}

// Mouse Settings
sensitivity ${sensitivity[0]}
m_yaw ${mYaw[0]}
m_pitch ${mPitch[0]}
zoom_sensitivity_ratio ${zoomSensitivity[0]}

// Player Settings
name "${playerName}"
cl_righthand ${rightHand ? '1' : '0'}

// Network Settings
rate ${rate[0]}
cl_updaterate ${updateRate[0]}
cl_cmdrate ${cmdRate[0]}

// Additional optimizations
cl_cmdbackup 2
cl_download_ingame 0
con_color "255 180 30"
echo "Config loaded successfully!"
`;
    return config;
  };

  const copyToClipboard = () => {
    navigator.clipboard.writeText(generateConfig());
    toast({
      title: "Copied!",
      description: "Config copied to clipboard",
    });
  };

  const downloadConfig = () => {
    const config = generateConfig();
    const blob = new Blob([config], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'config.cfg';
    a.click();
    URL.revokeObjectURL(url);
    toast({
      title: "Downloaded!",
      description: "Config file downloaded",
    });
  };

  const resetSettings = () => {
    setFpsMax([100]);
    setShowFps(false);
    setNetGraph(false);
    setDeveloper(false);
    setHudFastswitch(true);
    setDynamicCrosshair(false);
    setViolenceHgibs(true);
    setCorpseStay([600]);
    setSensitivity([2.5]);
    setMYaw([0.022]);
    setMPitch([0.022]);
    setZoomSensitivity([1.2]);
    setPlayerName('Player');
    setRightHand(true);
    setRate([25000]);
    setUpdateRate([101]);
    setCmdRate([101]);
    toast({
      title: "Reset!",
      description: "All settings reset to defaults",
    });
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-amber-50 via-orange-50 to-yellow-50">
      {/* Header */}
      <header className="bg-white/80 backdrop-blur-sm border-b border-amber-200 sticky top-0 z-50">
        <div className="container mx-auto px-4 py-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <Settings className="text-amber-600" size={32} />
              <div>
                <h1 className="text-3xl font-bold text-amber-900">Config Builder</h1>
                <p className="text-amber-700 text-sm mt-1">Complete CS 1.6 configuration generator</p>
              </div>
            </div>
            <div className="flex space-x-2">
              <Button onClick={resetSettings} variant="outline" size="sm">
                <RotateCcw size={16} className="mr-2" />
                Reset
              </Button>
              <Button onClick={copyToClipboard} variant="outline" size="sm">
                <Copy size={16} className="mr-2" />
                Copy
              </Button>
              <Button onClick={downloadConfig} size="sm" className="bg-amber-600 hover:bg-amber-700">
                <Download size={16} className="mr-2" />
                Download .cfg
              </Button>
            </div>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-4 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Settings Panel */}
          <div className="space-y-6">
            <Tabs defaultValue="performance" className="w-full">
              <TabsList className="grid w-full grid-cols-4">
                <TabsTrigger value="performance">Performance</TabsTrigger>
                <TabsTrigger value="hud">HUD</TabsTrigger>
                <TabsTrigger value="mouse">Mouse</TabsTrigger>
                <TabsTrigger value="network">Network</TabsTrigger>
              </TabsList>

              <TabsContent value="performance" className="space-y-4">
                <Card>
                  <CardHeader>
                    <CardTitle>Performance Settings</CardTitle>
                    <CardDescription>Optimize your game performance</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-6">
                    <div className="space-y-2">
                      <Label>FPS Max: {fpsMax[0]}</Label>
                      <Slider
                        value={fpsMax}
                        onValueChange={setFpsMax}
                        max={300}
                        min={60}
                        step={10}
                        className="w-full"
                      />
                    </div>
                    
                    <div className="flex items-center space-x-2">
                      <Switch
                        id="show-fps"
                        checked={showFps}
                        onCheckedChange={setShowFps}
                      />
                      <Label htmlFor="show-fps">Show FPS Counter</Label>
                    </div>
                    
                    <div className="flex items-center space-x-2">
                      <Switch
                        id="net-graph"
                        checked={netGraph}
                        onCheckedChange={setNetGraph}
                      />
                      <Label htmlFor="net-graph">Net Graph</Label>
                    </div>
                    
                    <div className="flex items-center space-x-2">
                      <Switch
                        id="developer"
                        checked={developer}
                        onCheckedChange={setDeveloper}
                      />
                      <Label htmlFor="developer">Developer Mode</Label>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="hud" className="space-y-4">
                <Card>
                  <CardHeader>
                    <CardTitle>HUD Settings</CardTitle>
                    <CardDescription>Customize your heads-up display</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-6">
                    <div className="flex items-center space-x-2">
                      <Switch
                        id="fast-switch"
                        checked={hudFastswitch}
                        onCheckedChange={setHudFastswitch}
                      />
                      <Label htmlFor="fast-switch">Fast Weapon Switch</Label>
                    </div>
                    
                    <div className="flex items-center space-x-2">
                      <Switch
                        id="dynamic-crosshair"
                        checked={dynamicCrosshair}
                        onCheckedChange={setDynamicCrosshair}
                      />
                      <Label htmlFor="dynamic-crosshair">Dynamic Crosshair</Label>
                    </div>
                    
                    <div className="flex items-center space-x-2">
                      <Switch
                        id="violence-hgibs"
                        checked={violenceHgibs}
                        onCheckedChange={setViolenceHgibs}
                      />
                      <Label htmlFor="violence-hgibs">Show Blood/Gore</Label>
                    </div>
                    
                    <div className="space-y-2">
                      <Label>Corpse Stay Time: {corpseStay[0]}s</Label>
                      <Slider
                        value={corpseStay}
                        onValueChange={setCorpseStay}
                        max={3600}
                        min={0}
                        step={60}
                        className="w-full"
                      />
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="mouse" className="space-y-4">
                <Card>
                  <CardHeader>
                    <CardTitle>Mouse Settings</CardTitle>
                    <CardDescription>Fine-tune your mouse sensitivity</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-6">
                    <div className="space-y-2">
                      <Label>Sensitivity: {sensitivity[0]}</Label>
                      <Slider
                        value={sensitivity}
                        onValueChange={setSensitivity}
                        max={10}
                        min={0.1}
                        step={0.1}
                        className="w-full"
                      />
                    </div>
                    
                    <div className="space-y-2">
                      <Label>Mouse Yaw: {mYaw[0]}</Label>
                      <Slider
                        value={mYaw}
                        onValueChange={setMYaw}
                        max={0.1}
                        min={0.01}
                        step={0.001}
                        className="w-full"
                      />
                    </div>
                    
                    <div className="space-y-2">
                      <Label>Mouse Pitch: {mPitch[0]}</Label>
                      <Slider
                        value={mPitch}
                        onValueChange={setMPitch}
                        max={0.1}
                        min={0.01}
                        step={0.001}
                        className="w-full"
                      />
                    </div>
                    
                    <div className="space-y-2">
                      <Label>Zoom Sensitivity: {zoomSensitivity[0]}</Label>
                      <Slider
                        value={zoomSensitivity}
                        onValueChange={setZoomSensitivity}
                        max={3}
                        min={0.1}
                        step={0.1}
                        className="w-full"
                      />
                    </div>
                    
                    <div className="space-y-2">
                      <Label>Player Name</Label>
                      <Input
                        value={playerName}
                        onChange={(e) => setPlayerName(e.target.value)}
                        placeholder="Enter your player name"
                      />
                    </div>
                    
                    <div className="flex items-center space-x-2">
                      <Switch
                        id="right-hand"
                        checked={rightHand}
                        onCheckedChange={setRightHand}
                      />
                      <Label htmlFor="right-hand">Right Hand Weapon Model</Label>
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="network" className="space-y-4">
                <Card>
                  <CardHeader>
                    <CardTitle>Network Settings</CardTitle>
                    <CardDescription>Optimize your connection settings</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-6">
                    <div className="space-y-2">
                      <Label>Rate: {rate[0]}</Label>
                      <Slider
                        value={rate}
                        onValueChange={setRate}
                        max={100000}
                        min={1000}
                        step={1000}
                        className="w-full"
                      />
                    </div>
                    
                    <div className="space-y-2">
                      <Label>Update Rate: {updateRate[0]}</Label>
                      <Slider
                        value={updateRate}
                        onValueChange={setUpdateRate}
                        max={101}
                        min={10}
                        step={1}
                        className="w-full"
                      />
                    </div>
                    
                    <div className="space-y-2">
                      <Label>CMD Rate: {cmdRate[0]}</Label>
                      <Slider
                        value={cmdRate}
                        onValueChange={setCmdRate}
                        max={101}
                        min={10}
                        step={1}
                        className="w-full"
                      />
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>
            </Tabs>
          </div>

          {/* Preview Panel */}
          <div>
            <Card className="sticky top-24">
              <CardHeader>
                <CardTitle>Configuration Preview</CardTitle>
                <CardDescription>Live preview of your config file</CardDescription>
              </CardHeader>
              <CardContent>
                <Textarea
                  value={generateConfig()}
                  readOnly
                  className="min-h-[600px] font-mono text-sm"
                />
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ConfigBuilder;
